{"version":3,"sources":["Home.js","App.js","serviceWorker.js","index.js"],"names":["Home","props","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","react_default","a","createElement","Component","About","Users","App","console","log","scrollTopsId","document","getElementById","click","window","scrollTo","addEventListener","top","behavior","onkeydown","addOrRemove","ssName","getElementsByClassName","keyCoo","event","keyCode","i","length","getAttribute","classList","add","remove","onkeyup","react_router_dom","className","to","id","endvalue","openurl","align","react_router","path","exact","component","Index","englishtext","Boolean","location","hostname","match","ReactDOM","render","src_App_0","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.f97e3d7f.chunk.js","sourcesContent":["import React, { Component } from 'react';\nimport './Home.scss';\n\nclass Home extends Component {\n  constructor(props) {\n    super(props);\n  }\n  componentDidMount() {\n    \n  }\n  render() {\n    return (\n      <div>\n         <p>Home</p>\n         <p>Page</p>\n         <p>Wilson</p>\n      </div>\n    );\n  }\n}\n\n\nexport default Home;\n\n","import React, { Component } from 'react';\nimport './App.scss';\nimport Index from './Home.js';\nimport { BrowserRouter as Router, Route, Link } from \"react-router-dom\";\n\nclass App extends Component {\n  constructor(props) {\n    super(props);\n  }\n  componentDidMount() {\n    console.log(\"sss\");\n\n    var scrollTopsId = document.getElementById(\"scrollToTop\");\n\n    document.getElementById(\"scrollToTop\").click(function () {\n      window.scrollTo(0, 0);\n    })\n\n    // document.getElementById(\"scrollToTop\").onclick = function(){\n    //   window.scrollTo({ top: 0, behavior: 'smooth' });\n    // };\n\n    scrollTopsId.addEventListener('click', function () {\n      window.scrollTo({ top: 0, behavior: 'smooth' });\n    }, false);\n\n    function keyFunction(addOrRemove) {\n      var ssName = document.getElementsByClassName(\"englishText\");\n      //englishText Name 集合\n      var keyCoo = window.event.keyCode;\n      //敲鍵盤的數值\n      for (var i = 0; i < ssName.length; i++) {\n        if (ssName[i].getAttribute(\"englishtext\") == keyCoo) {\n          (addOrRemove) ? ssName[i].classList.add(\"bloeen\") : ssName[i].classList.remove(\"bloeen\");\n        }\n      }\n    }\n    function keyupFunction() {\n      var ssName = document.getElementsByClassName(\"englishText\");\n      //englishText Name 集合\n      var keyCoo = window.event.keyCode;\n      //敲鍵盤的數值\n      for (var i = 0; i < ssName.length; i++) {\n        if (ssName[i].getAttribute(\"englishtext\") == keyCoo) {\n          ssName[i].classList.remove(\"bloeen\");\n        }\n      }\n      //element.classList.remove(\"mystyle\");\n    }\n    document.onkeydown = keyFunction;\n    document.onkeyup = keyupFunction;\n  }\n\n  render() {\n    return (\n      <Router>\n        <div className=\"App\">\n          <header>\n            <ul>\n              <li className=\"active\">\n                <Link to=\"/\">Home</Link>\n              </li>\n              <li>\n                <Link to=\"/about/\">About</Link>\n              </li>\n              <li>\n                <Link to=\"/users/\">Users</Link>\n              </li>\n              <li>影片牆</li>\n            </ul>\n          </header>\n          <div className=\"section section1\">\n            <div className=\"myNameTitleAll\">\n              <h1 className=\"myNameTitle\" id=\"theHostName\" endvalue=\"Wilson Chen\">Wilson Chen</h1>\n              <div className=\"communityIcon\">\n                <i className=\"fab fa-facebook\" openurl=\"www.fb.com/aaa\"></i>\n                <i className=\"fab fa-instagram\" openurl=\"www.fb.com/aaa\"></i>\n                <i className=\"fab fa-youtube\" openurl=\"www.fb.com/aaa\"></i>\n              </div>\n            </div>\n            <h2 align=\"center\">鍵盤事件：基本測試</h2>\n          </div>\n          <div className=\"section section2\">\n            <Route path=\"/\" exact component={Index} />\n            <Route path=\"/about/\" component={About} />\n            <Route path=\"/users/\" component={Users} />\n            <div className=\"squaredAll\">\n              <div className=\"squared\">\n                <p className=\"englishText\" englishtext=\"71\">G</p>\n              </div>\n              <div className=\"squared\">\n                <p className=\"englishText\" englishtext=\"66\">B</p>\n              </div>\n              <div className=\"squared\">\n                <p className=\"englishText\" englishtext=\"65\">A</p>\n              </div>\n            </div>\n          </div>\n          <div className=\"top\" id=\"scrollToTop\">Scroll To Top</div>\n        </div>\n      </Router>\n    );\n  }\n}\n\nfunction About() {\n  return <h2>About</h2>;\n}\n\nfunction Users() {\n  return <h2>Users</h2>;\n}\n\nexport default App;\n\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './All.scss';\nimport './Reset.scss';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}